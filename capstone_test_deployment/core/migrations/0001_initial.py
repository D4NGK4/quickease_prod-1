# Generated by Django 5.1.1 on 2024-11-12 12:14

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('date_achieved', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('badge_name', models.CharField(max_length=30, unique=True)),
                ('badge_description', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
            },
        ),
        migrations.CreateModel(
            name='TestChoices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('item_choice_text', models.TextField()),
                ('isAnswer', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Test Choice',
                'verbose_name_plural': 'Test Choices',
            },
        ),
        migrations.CreateModel(
            name='Pomodoro',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('study_time', models.PositiveIntegerField(default=25)),
                ('short_break', models.PositiveIntegerField(default=5)),
                ('long_break', models.PositiveIntegerField(default=15)),
                ('show_timer', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Pomodoro',
                'verbose_name_plural': 'Pomodoro',
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('TestQuestion', models.TextField()),
            ],
            options={
                'verbose_name': 'Test Question',
                'verbose_name_plural': 'Test Questions',
            },
        ),
        migrations.CreateModel(
            name='UserFlashCards',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('frontCardText', models.CharField(default='', max_length=100, verbose_name='Front Card Text')),
                ('backCardText', models.CharField(default='', max_length=500, verbose_name='Back Card Text')),
            ],
            options={
                'verbose_name': 'User FlashCard',
                'verbose_name_plural': 'User FlashCards',
            },
        ),
        migrations.CreateModel(
            name='UserNotes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='uuid')),
                ('notetitle', models.TextField(default='', verbose_name='Note Title')),
                ('notecontents', models.TextField(verbose_name='Note Contents')),
                ('notedatecreated', models.DateTimeField(auto_now_add=True)),
                ('notesummary', models.TextField(blank=True, null=True, verbose_name='Note Summary')),
            ],
            options={
                'verbose_name': 'User Note',
                'verbose_name_plural': 'User Notes',
            },
        ),
    ]
